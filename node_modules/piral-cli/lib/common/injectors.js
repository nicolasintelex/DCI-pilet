"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createInitialKrasConfig = exports.notifyServerOnline = void 0;
const chalk_1 = require("chalk");
const path_1 = require("path");
const emoji_1 = require("./emoji");
const log_1 = require("./log");
function notifyServerOnline(bundlers, path, api) {
    return (svc) => {
        (0, log_1.log)('generalDebug_0003', `The kras server for debugging is online!`);
        const address = `${svc.protocol}://localhost:${chalk_1.default.green(svc.port)}`;
        (0, log_1.logInfo)(`${emoji_1.liveIcon} Running at ${chalk_1.default.bold(address + path)}`);
        (0, log_1.logInfo)(`${emoji_1.settingsIcon} Manage via ${chalk_1.default.bold(address + api)}`);
        (0, log_1.logReset)();
        bundlers.forEach((bundler) => bundler.start());
    };
}
exports.notifyServerOnline = notifyServerOnline;
function createInitialKrasConfig(directory, sources = [], map = {}, feed = []) {
    return {
        api: '/manage-mock-server',
        directory,
        map: Object.assign({ '/': '' }, map),
        ssl: undefined,
        sources,
        injectorDirs: [(0, path_1.resolve)(__dirname, '../injectors')],
        injectors: {
            script: {
                active: true,
            },
            har: {
                active: true,
                delay: false,
            },
            json: {
                active: true,
                randomize: true,
            },
            piral: {
                active: true,
                headers: {},
            },
            pilet: {
                active: true,
                meta: 'debug-meta.json',
                headers: {},
                feed,
            },
            proxy: {
                active: true,
            },
        },
    };
}
exports.createInitialKrasConfig = createInitialKrasConfig;
//# sourceMappingURL=injectors.js.map